{"version":3,"sources":["components/Sounds/sad-fail.mp3","components/Sounds/happy-fail.mp3","components/Sounds/index.jsx","components/Preview.jsx","utils/index.js","components/Create.jsx","App.js","reportWebVitals.js","index.js"],"names":["library","title","file","sad","happy","Sounds","onSelect","useState","undefined","active","setActive","useEffect","className","map","sound","index","onClick","style","cursor","display","padding","backgroundColor","controls","src","Preview","soundRef","useRef","token","useParams","useMemo","payload","atob","split","text","decodeURIComponent","error","console","extractTokenPayload","output","SpeechSynthesisUtterance","lang","utterance","link","window","location","href","justify","span","paddingTop","width","direction","size","type","showIcon","message","readOnly","value","speechSynthesis","speak","onend","current","play","PlaySquareOutlined","fontSize","ref","TextArea","Input","Title","Typography","Header","Layout","Content","Create","setNewsText","setSound","setToken","navigate","useNavigate","param","color","marginBottom","placeholder","onChange","e","target","tkn","news","str","encodeURIComponent","btoa","generateBase64Token","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92435cb7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sad-fail.0e1436ec.mp3\";","export default __webpack_public_path__ + \"static/media/happy-fail.5df41bbc.mp3\";","import React, { useEffect, useState } from \"react\";\nimport sad from \"./sad-fail.mp3\";\nimport happy from \"./happy-fail.mp3\";\n\nexport const library = [\n  {\n    title: \"Sad failure\",\n    file: sad,\n  },\n  {\n    title: \"Happy failure\",\n    file: happy,\n  },\n];\n\nconst Sounds = ({ onSelect }) => {\n  const [active, setActive] = useState(undefined);\n\n  useEffect(() => {\n    active !== undefined && onSelect(active);\n  }, [active, onSelect]);\n\n  return (\n    <div className=\"sounds\">\n      {library.map((sound, index) => (\n        <div\n          onClick={() => setActive(index)}\n          key={index}\n          style={{\n            cursor: \"pointer\",\n            display: \"flex\",\n            padding: 10,\n            backgroundColor: active === index ? \"#fff5f5\" : null,\n          }}\n        >\n          {sound.title}\n          <audio controls src={sound.file} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Sounds;\n","import { useMemo, useRef } from \"react\";\nimport { extractTokenPayload, getSoundByIndex } from \"../utils\";\nimport { Alert, Input, Row, Col, Space } from \"antd\";\nimport { useParams } from \"react-router\";\nimport { PlaySquareOutlined } from \"@ant-design/icons\";\nimport { Content, Header } from \"antd/lib/layout/layout\";\n\nconst Preview = () => {\n  const soundRef = useRef();\n  const { token } = useParams();\n  const [utterance, sound] = useMemo(() => {\n    const payload = extractTokenPayload(token);\n\n    if (payload) {\n      const output = new SpeechSynthesisUtterance(payload.text);\n      output.lang = \"ru-RU\";\n\n      const sound = getSoundByIndex(payload.sound);\n\n      return [output, sound.file];\n    }\n    return [];\n  }, [token]);\n\n  const speak = () => {\n    speechSynthesis.speak(utterance);\n\n    utterance.onend = () => {\n      soundRef.current.play();\n    };\n  };\n\n  const link = useMemo(() => {\n    return window.location.href;\n  }, [token]);\n\n  return (\n    <>\n      <Header>\n        <a href=\"/\">Back home</a>\n      </Header>\n      <Content>\n        <Row justify=\"center\">\n          <Col span={6}>\n            <Space\n              style={{ paddingTop: 100, width: \"100%\" }}\n              direction=\"vertical\"\n              size=\"large\"\n            >\n              <Alert type=\"success\" showIcon={true} message={`Copy link: `} />\n              <Input readOnly={true} value={link} />\n              <div onClick={speak}>\n                <h2>Play</h2>\n                <PlaySquareOutlined style={{ fontSize: 100 }} />\n              </div>\n              <audio ref={soundRef} src={sound} />\n            </Space>\n          </Col>\n        </Row>\n      </Content>\n    </>\n  );\n};\n\nexport default Preview;\n","import { library } from \"../components/Sounds\";\n\nexport const generateBase64Token = (news) => {\n  try {\n    const { text, sound } = news;\n\n    const str = `${encodeURIComponent(text)}^${sound}`;\n\n    return btoa(str);\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\nexport const extractTokenPayload = (token) => {\n  if (!token) return null;\n\n  try {\n    const str = atob(token);\n    const [text, sound] = str.split(\"^\");\n\n    return { text: decodeURIComponent(text), sound };\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\nexport const getSoundByIndex = (index) => {\n  if (library[index]) return library[index];\n  return null;\n};\n","import React, { useEffect, useState } from \"react\";\nimport Preview from \"./Preview\";\nimport {\n  Typography,\n  Divider,\n  Space,\n  Row,\n  Col,\n  Input,\n  Layout,\n  Button,\n} from \"antd\";\nimport Sounds from \"./Sounds\";\nimport { generateBase64Token } from \"../utils\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\nconst { Header, Content } = Layout;\n\nconst Create = () => {\n  const [text, setNewsText] = useState(\"\");\n  const [sound, setSound] = useState(undefined);\n  const [token, setToken] = useState(\"\");\n  const handleNewsCreate = () => {\n    const tkn = generateBase64Token({ sound, text });\n    if (tkn) setToken(tkn);\n  };\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    token && navigate(`/preview/${token}`, { param: token });\n  }, [token, navigate]);\n\n  return (\n    <div>\n      <Header>\n        <Space size=\"large\" />\n        <Title style={{ color: \"white\", marginBottom: 0, paddingTop: 5 }}>\n          Create Your News Piece\n        </Title>\n      </Header>\n      <Divider>Paste the text</Divider>\n      <Content>\n        <Row justify=\"center\">\n          <Col span={4}>\n            <Space direction=\"vertical\" size=\"large\">\n              <TextArea\n                placeholder={\n                  \"What made you excited (only Cyrillic support at the moment)?\"\n                }\n                onChange={(e) => setNewsText(e.target.value)}\n                size=\"large\"\n                value={text}\n              ></TextArea>\n              <Divider>Pick a Sound</Divider>\n              <Sounds onSelect={setSound} />\n              <Button onClick={handleNewsCreate}>Create</Button>\n            </Space>\n          </Col>\n        </Row>\n      </Content>\n    </div>\n  );\n};\n\nexport default Create;\n","import Create from \"./components/Create\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Preview from \"./components/Preview\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Create />}></Route>\n        <Route path=\"/preview/:token\" element={<Preview />}></Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}